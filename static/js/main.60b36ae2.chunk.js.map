{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","clockName","useState","Date","today","setToday","prevClockName","setNewClockName","useEffect","timerId","window","setInterval","console","info","toUTCString","slice","clearInterval","className","App","hasClock","setHasClock","setClockName","handleRightClick","document","addEventListener","event","preventDefault","handleLeftClick","value","now","toString","getRandomName","removeEventListener","ReactDOM","render","getElementById"],"mappings":"oLAOaA,EAA8B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC5C,EAA0BC,mBAAS,IAAIC,MAAvC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAyCH,mBAASD,GAAlD,mBAAOK,EAAP,KAAsBC,EAAtB,KAkBA,OAhBAC,qBAAU,WACR,IAAMC,EAAUC,OAAOC,aAAY,WACjCN,EAAS,IAAIF,MACbS,QAAQC,KAAKT,EAAMU,cAAcC,OAAO,IAAK,MAC5C,KAEH,OAAO,kBAAML,OAAOM,cAAcP,MACjC,CAACL,IAEJI,qBAAU,WACJP,IAAcK,IAChBM,QAAQC,KAAR,uBAA6BP,EAA7B,eAAiDL,IACjDM,EAAgBN,MAEjB,CAACA,IAGF,sBAAKgB,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGhB,IAGF,YAED,sBAAMgB,UAAU,cAAhB,SACIb,EAAMU,cAAcC,OAAO,IAAK,SCzBnC,IAAMG,EAAgB,WAC3B,MAAgChB,oBAAS,GAAzC,mBAAOiB,EAAP,KAAiBC,EAAjB,KACA,EAAkClB,mBAAS,WAA3C,mBAAOD,EAAP,KAAkBoB,EAAlB,KAEMC,EAAmB,kBACvBC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBAGNN,GAAY,OAGVO,EAAkB,kBACtBJ,SAASC,iBAAiB,SAAS,WACjCJ,GAAY,OAmBhB,OAfAZ,qBAAU,WACR,IAAMC,EAAUC,OAAOC,aAAY,WACjCU,EA1BN,WACE,IAAMO,EAAQzB,KAAK0B,MAAMC,WAAWf,OAAO,GAE3C,MAAM,SAAN,OAAgBa,GAuBCG,MACZ,MAKH,OAHAT,IACAK,IAEO,WACLjB,OAAOM,cAAcP,GACrBc,SAASS,oBAAoB,cAAeV,GAC5CC,SAASS,oBAAoB,QAASL,MAEvC,CAACR,EAAUlB,IAGZ,sBAAKgB,UAAU,MAAf,UACE,6CACCE,GACC,cAAC,EAAD,CAAOlB,UAAWA,QC7C1BgC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,U","file":"static/js/main.60b36ae2.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\n\ntype ClockProps = {\n  clockName: string,\n};\n\nexport const Clock: React.FC<ClockProps> = ({ clockName }) => {\n  const [today, setToday] = useState(new Date());\n  const [prevClockName, setNewClockName] = useState(clockName);\n\n  useEffect(() => {\n    const timerId = window.setInterval(() => {\n      setToday(new Date());\n      console.info(today.toUTCString().slice(-12, -4));\n    }, 1000);\n\n    return () => window.clearInterval(timerId);\n  }, [today]);\n\n  useEffect(() => {\n    if (clockName !== prevClockName) {\n      console.info(`Renamed from ${prevClockName} to ${clockName}`);\n      setNewClockName(clockName);\n    }\n  }, [clockName]);\n\n  return (\n    <div className=\"Clock\">\n      <strong className=\"Clock__name\">\n        {clockName}\n      </strong>\n\n      {' time is '}\n\n      <span className=\"Clock__time\">\n        {(today.toUTCString().slice(-12, -4))}\n      </span>\n    </div>\n  );\n};\n","/* eslint-disable no-console */\nimport React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport const App: React.FC = () => {\n  const [hasClock, setHasClock] = useState(true);\n  const [clockName, setClockName] = useState('Clock-0');\n\n  const handleRightClick = () => (\n    document.addEventListener('contextmenu', (event) => {\n      event.preventDefault(); // not to show the context menu\n\n      // put your code here\n      setHasClock(false);\n    }));\n\n  const handleLeftClick = () => (\n    document.addEventListener('click', () => {\n      setHasClock(true);\n    })\n  );\n\n  useEffect(() => {\n    const timerId = window.setInterval(() => {\n      setClockName(getRandomName());\n    }, 3300);\n\n    handleRightClick();\n    handleLeftClick();\n\n    return () => {\n      window.clearInterval(timerId);\n      document.removeEventListener('contextmenu', handleRightClick);\n      document.removeEventListener('click', handleLeftClick);\n    };\n  }, [hasClock, clockName]);\n\n  return (\n    <div className=\"App\">\n      <h1>React clock</h1>\n      {hasClock && (\n        <Clock clockName={clockName} />\n      )}\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}